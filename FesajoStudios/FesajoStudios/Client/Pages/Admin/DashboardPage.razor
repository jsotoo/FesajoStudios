@page "/dashboard"
@using ChartJs.Blazor.BarChart.Axes;

<Chart Config="@ConfiguracionGrafico" Width="250" Height="100"  />


@code {
    BarConfig ConfiguracionGrafico;

    protected override void OnInitialized()
    {
        ConfigurarGraficoBarras();
    }

    private void ConfigurarGraficoBarras()
    {
        var reservas = new List<Reserva>
        {
            new Reserva { Funcion = "Función 1", Sala = "Sala A", Pelicula = "Pelicula X", CantidadReservas = 50 },
            new Reserva { Funcion = "Función 2", Sala = "Sala B", Pelicula = "Pelicula Y", CantidadReservas = 75 },
            new Reserva { Funcion = "Función 3", Sala = "Sala C", Pelicula = "Pelicula Z", CantidadReservas = 100 },
        };


            ConfiguracionGrafico = new BarConfig();

            ConfiguracionGrafico.Options = new BarOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle()
                    {
                        Display = true,
                        Text = "Reservas por Función, Sala y Película"
                    },
                    Scales = new BarScales
                    {
                        YAxes = new List<CartesianAxis>
                {
                    new LinearCartesianAxis
                    {
                        Ticks = new LinearCartesianTicks
                        {
                            BeginAtZero = true,
                           
                        }
                    }
                }
                    }
                };

        ConfiguracionGrafico.Data.Labels.Add("Cantidad de Reservas por Sala");

        foreach (var reserva in reservas)
        {
            var dataset = new BarDataset<int>(new[] { reserva.CantidadReservas })
                {
                    Label = $"Sala: {reserva.Sala}, Función: {reserva.Funcion}, Pelicula: {reserva.Pelicula}, Reservas",
                    BackgroundColor = new[]
                    {
                    GetRandomColor()
                },
                    BarThickness = 100 // Ajusta este valor según tus preferencias
                };

            ConfiguracionGrafico.Data.Datasets.Add(dataset);
        }

        string GetRandomColor()
        {
            Random rand = new Random();
            return $"rgba({rand.Next(0, 256)}, {rand.Next(0, 256)}, {rand.Next(0, 256)}, 0.5)";
        }
    }

    public class Reserva
    {
        public string Funcion { get; set; }
        public string Sala { get; set; }
        public string Pelicula { get; set; }
        public int CantidadReservas { get; set; }
    }
}

@* 
@page "/ReservasPorFuncion"

<Chart Config="@ConfiguracionGrafico" Width="600" Height="300" />

@code {
    BarConfig ConfiguracionGrafico;

    protected override void OnInitialized()
    {
        ConfigurarGraficoBarras();
    }

    private void ConfigurarGraficoBarras()
    {
        ConfiguracionGrafico = new BarConfig();

        ConfiguracionGrafico.Options = new BarOptions
            {
                Responsive = true,
                Title = new OptionsTitle()
                {
                    Display = true,
                    Text = "Reservas por Función, Sala y Película"
                },
                Scales = new BarScales
                {
                    YAxes = new List<CartesianAxis>
                {
                    new LinearCartesianAxis
                    {
                        Ticks = new LinearCartesianTicks
                        {
                            BeginAtZero = true,
                            StepSize = 50
                        }
                    }
                }
                }
            };

        var reservas = new List<Reserva>
        {
            new Reserva { Funcion = "Función 1", Sala = "Sala A", Pelicula = "Pelicula X", CantidadReservas = 50 },
            new Reserva { Funcion = "Función 2", Sala = "Sala B", Pelicula = "Pelicula Y", CantidadReservas = 75 },
            new Reserva { Funcion = "Función 3", Sala = "Sala C", Pelicula = "Pelicula Z", CantidadReservas = 100 },
        };

        ConfiguracionGrafico.Data.Labels.Clear();
        ConfiguracionGrafico.Data.Datasets.Clear();

        foreach (var reserva in reservas)
        {
            ConfiguracionGrafico.Data.Labels.Add($"{reserva.Funcion}\nSala: {reserva.Sala}\nPelícula: {reserva.Pelicula}");
            var dataset = new BarDataset<int>(new[] { reserva.CantidadReservas })
                {
                    Label = "Reservas",
                    BackgroundColor = "rgba(255, 99, 132, 0.5)"
                };
            ConfiguracionGrafico.Data.Datasets.Add(dataset);
        }
    }

    public class Reserva
    {
        public string Funcion { get; set; }
        public string Sala { get; set; }
        public string Pelicula { get; set; }
        public int CantidadReservas { get; set; }
    }
} *@

