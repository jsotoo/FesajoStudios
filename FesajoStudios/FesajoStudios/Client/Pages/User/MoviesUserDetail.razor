@page "/MoviesList/detail/{Id:int}"
@using System.Globalization;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IToastService ToastService


<div class="container px-4 px-lg-5">
    @if (Movie is not null)
    {
        <div class="row gx-4 align-items-center">
            <div class="col">
                @if (string.IsNullOrWhiteSpace(Movie.UrlImage))
                {
                    <img src="/uploads/sinimagen.jpg" class="card-img-top border-dark border-1 producto-card-wide" alt="@Movie.Title" />
                }
                else
                {
                    <img src="@Movie.UrlImage" class="card-img-top border-dark border-1 producto-card-wide" alt="@Movie.Title" />
                }
            </div>
            <div class="col">
                <h3 class="display-5 fw-bolder">@Movie.Title</h3>
                <p class="lead">@Movie.Description</p>
                <h4 class="display-5 fw-bolder" style="font-size: 25px;">@Movie.Duration</h4>
                <h4 class="display-5 fw-bolder" style="font-size: 25px;">@Movie.Director</h4>
                <h4 class="display-5 fw-bolder" style="font-size: 25px;">@Movie.Genre</h4>
                <h4 class="display-5 fw-bolder" style="font-size: 25px;">@Movie.Rating</h4>

                <br />
                <br />

                @if (Showings.Count == 0)
                {
                    <h1 class="display-5 fw-bolder">No hay salas disponibles</h1>
                }
                else
                {
                
                
                    <h1 class="display-5 fw-bolder">Salas disponibles</h1>


                    <table class="table table-bordered table-striped">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Inicio</th>
                                <th scope="col">Fin</th>
                                <th scope="col">Sala</th>
                                <th scope="col"></th> 
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Showings)
                            {
                                <tr style="@(item.StartDate < DateTime.Now ? "background-color: #FFA07A;" : "")">
                                    <td>@item.StartDate.ToString("g", new CultureInfo("es-MX"))</td>
                                    <td>@item.EndDate.ToString("g", new CultureInfo("es-MX"))</td>
                                    <td>@item.Theather</td>
                                    <td>
                                        @if (item.StartDate >= DateTime.Now)
                                        {
                                            <button class="btn btn-secondary" @onclick="() => ShowTheather(item.Id)">Ver detalle</button>
                                        }
                                        else
                                        {
                                            <span style="color: red;">Fecha vencida</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>

                }




                <div class="d-flex">
                    <NavLink class="btn btn-secondary" href="/MoviesList"><i class="bi bi-skip-backward-fill me-1"></i>Volver</NavLink>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public MovieDtoResponse? Movie { get; set; }

    public ICollection<ShowingDto> Showings { get; set; } = new List<ShowingDto>();


    protected override async Task OnParametersSetAsync()
    {
        try
        {
            await Get();
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }


    private async Task Get()
    {
        var responseMovie = await HttpClient.GetFromJsonAsync<MovieDtoResponse>($"api/Movies/{Id}");
        if (responseMovie is not null)
        {
            Movie = responseMovie;
        }

        var responseShowingsByMovieId = await HttpClient.GetFromJsonAsync<ICollection<ShowingDto>>($"api/Showings/GetShowingsByMovieId/{Id}");
        if (responseShowingsByMovieId != null)
        {
            Showings = responseShowingsByMovieId;
        }

  
    }

    private void ShowTheather(int id)
    {
        NavigationManager.NavigateTo($"/MoviesList/detail/theather/{id}");
    }


  
      
    



}
